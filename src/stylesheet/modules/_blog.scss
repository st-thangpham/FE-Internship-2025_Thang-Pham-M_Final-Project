@use "sass:map";
@use "sass:list";
@use "sass:meta";
@use "../base/mixins";
@use "../base/variables";

.list-blog {
  display: flex;
  flex-direction: column;
  gap: 24px;
  margin: 0 auto;
  max-width: 728px;
  padding: 0;

  @include mixins.respond-above(wide) {
    padding: 0 24px;
  }

  .list-item {
    width: 100%;
    display: flex;
    flex-direction: column;
    padding-bottom: 24px;
    border-bottom: 1px solid map.get(variables.$color, grey-a);
    text-align: left;

    .blog-author {
      @include mixins.pxRem(font-size, 13);
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 24px;

      .author-avatar {
        @include mixins.pxRem(width, 24);
        @include mixins.pxRem(height, 24);
        @include mixins.border-radius(4px);
        object-fit: cover;
      }

      .author-name {
        font-weight: 500;
      }
    }

    .blog-content {
      display: flex;
      justify-content: space-between;

      .blog-info {
        flex: 1 1 auto;
        display: flex;
        flex-direction: column;
        min-width: 0;

        .blog-title {
          @include mixins.pxRem(font-size, map.get(variables.$font-size, lg));
          max-height: calc(2 * map.get(variables.$font-size, xl) * 1.3);
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
          font-weight: 700;
          line-height: 1.3;

          @include mixins.respond-above(medium) {
            @include mixins.pxRem(font-size, map.get(variables.$font-size, xxl));
            max-height: calc(2 * map.get(variables.$font-size, xxl) * 1.3);
          }
        }

        .blog-description {
          @include mixins.pxRem(font-size, map.get(variables.$font-size, sm));
          min-height: calc(2 * map.get(variables.$font-size, sm) * 1.2);
          color: map.get(variables.$color, slate-grey-a);
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
          line-height: 1.2;
          margin-bottom: 30px;
        }

        .blog-created-at {
          @include mixins.pxRem(font-size, map.get(variables.$font-size, xs));
          color: map.get(variables.$color, state-grey-b);
        }
      }

      .blog-cover {
        flex: 0 0 auto;
        width: 160px;
        height: 107px;
        margin-left: 56px;
        overflow: hidden;

        @include mixins.respond-below(medium) {
          width: 80px;
          height: 53px;
          margin-left: 16px;
        }

        .cover-image {
          width: 100%;
          height: 100%;
          object-fit: cover;
          display: block;
        }
      }
    }
  }

  &.is-loading::after {
    content: '';
    display: block;
    height: 40px;
  }

  &.bounce-trigger .blog-loading-wrapper {
    animation: bounceOnly 0.5s ease-in-out;
  }

  .blog-loading-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px 0 40px;
    min-height: 60px;
  }

  .blog-notification {
    @include mixins.pxRem(font-size, map.get(variables.$font-size, lg));
    color: map.get(variables.$color, slate-grey-a);
    opacity: 0.7;
    transition: opacity 0.3s;
  }

  // Animations
  @keyframes bounceFade {
    0% {
      transform: translateY(10px);
      opacity: 0;
    }

    60% {
      transform: translateY(-4px);
      opacity: 0.6;
    }

    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes bounceOnly {
    0% {
      transform: translateY(10px);
    }

    60% {
      transform: translateY(-6px);
    }

    100% {
      transform: translateY(0);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
}

.blog-actions {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;

  .blog-action-menu {
    display: flex;
    gap: 24px;

    .blog-status {
      width: 20px;
      height: 20px;
      opacity: 0.8;
    }
  }

  .dropdown-menu {
    position: absolute;
    top: 28px;
    right: 0;
    background-color: map.get(variables.$color, white);
    border: 1px solid map.get(variables.$color, grey-a);
    border-radius: 6px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    min-width: 120px;
    z-index: 10;
    overflow: hidden;

    .list-item {
      padding: 10px 16px;
      font-size: 14px;
      border-bottom: 1px solid map.get(variables.$color, grey-a);
      cursor: pointer;
      color: map.get(variables.$color, black);
      transition: background 0.2s;


      &:hover {
        background-color: map.get(variables.$color, grey-a);
      }
    }
  }
}
