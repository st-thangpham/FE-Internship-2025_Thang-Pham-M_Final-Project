@use "sass:map";
@use "sass:list";
@use "sass:meta";
@use "../base/mixins";
@use "../base/variables";

$button-colors: (
  primary: map.get(variables.$color, primary),
  danger: map.get(variables.$color, red),
);

$button-sizes: (
  "sm": (4px,
    12px,
    14px,
  ),
  "md": (8px,
    16px,
    16px,
  ),
  "lg": (12px,
    20px,
    18px,
  ),
  "xl": (16px,
    24px,
    20px,
  ),
);

.btn {
  @include mixins.pxRem(border-radius, map.get(variables.$border-radius, lg));
  @include mixins.pxRem(height, 40);
  border: none;
  outline: none;
  cursor: pointer;
  user-select: none;
  display: flex;
  align-items: center;
  justify-content: center;
  // default size
  padding: list.nth(map.get($button-sizes, "md"), 1) list.nth(map.get($button-sizes, "md"), 2);
  font-size: list.nth(map.get($button-sizes, "md"), 3);

  @each $name, $color in $button-colors {
    &-#{$name} {
      font-weight: bold;
      background-color: $color;
      color: map.get(variables.$color, white);
      opacity: 0.8;

      &:hover {
        opacity: 1;
        transition: opacity 0.3s;
      }

      &:disabled {
        background-color: if(meta.type-of($color)=="color",
            rgba($color, 0.4),
            $color );
        cursor: not-allowed;
      }
    }
  }

  @each $size, $values in $button-sizes {
    &-#{$size} {
      padding: list.nth($values, 1) list.nth($values, 2);
      font-size: list.nth($values, 3);
    }
  }

  &.btn-block {
    width: 100%;
  }

  &.btn-avatar {
    @include mixins.pxRem(width, 30);
    @include mixins.pxRem(height, 30);
    @include mixins.border-radius(50%);
    padding: 0;
    font-size: 0;
    line-height: 0;

    .img {
      @include mixins.border-radius(50%);
    }

    &:hover {
      opacity: 0.8;
      transition: opacity 0.3s;
    }
  }

  &.btn-icon {
    @include mixins.pxRem(width, 20);
    @include mixins.pxRem(height, 20);
    padding: 0;
    line-height: 0;
  }
}
