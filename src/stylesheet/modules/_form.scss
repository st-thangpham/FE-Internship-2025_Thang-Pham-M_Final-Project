@use "sass:map";
@use "../base/variables" as vars;
@use "../base/mixins" as mixins;

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 30px map.get(vars.$color, white) inset !important;
}

.form {
  position: relative;

  .form-group {
    @include mixins.pxRem(margin-bottom, 36);
    position: relative;

    &.form-group-icon {
      @include mixins.pxRem(padding-left, 36);
      display: flex;
      align-items: center;
      width: 100%;
    }

    .icon {
      position: absolute;
      left: 0;
      color: rgba(0, 0, 0, 0.54);
    }

    .input-append {
      color: rgba(0, 0, 0, 0.54);
      cursor: pointer;
    }
  }

  .form-control {
    @include mixins.pxRem(border-radius, map.get(vars.$border-radius, md));
    @include mixins.pxRem(padding, 8 15);
    @include mixins.pxRem(font-size, map.get(vars.$font-size, normal));
    @include mixins.pxRem(line-height, 22.4);
    display: flex;
    align-items: center;
    width: 100%;
    max-height: 40px;
    color: map.get(vars.$color, secondary);
    outline: none;
    border: 1px solid map.get(vars.$color, bg-light-secondary);

    &.input-underline {
      border-radius: 0;
      border: none;
      border-bottom: 1px solid map.get(vars.$color, bg-light-secondary);
      position: relative;

      &+.line {
        @include mixins.pxRem(height, 2);
        position: absolute;
        left: 0;
        bottom: 0;
        width: 0;
        background-color: map.get(vars.$color, grey-b);
        transition: all 0.3s ease-in-out;
      }

      &.is-invalid~.line {
        display: none;
      }

      &:focus {
        &+.line {
          width: 100%;
        }

        &::placeholder {
          opacity: 1;
        }
      }
    }

    &.is-invalid {
      border-color: map.get(vars.$color, danger);

      +.form-label {
        color: map.get(vars.$color, danger);
      }
    }

    &:focus,
    &:not(:placeholder-shown) {
      ~.form-label {
        opacity: 1;
      }

      &::placeholder {
        opacity: 0;
      }
    }

    &[readonly],
    &:disabled,
    &.disabled {
      color: map.get(vars.$color, disabled);
      background-color: map.get(vars.$color, "white");
      cursor: default;

      ~.form-label,
      &::placeholder {
        color: map.get(vars.$color, disabled);
      }

      &:focus {
        border-color: map.get(vars.$color, bg-light-secondary);
      }
    }

    &:focus {
      border-color: map.get(vars.$color, primary);
    }

    &.form-select {
      cursor: pointer;
    }
  }

  .form-label {
    @include mixins.pxRem(font-size, 12);
    @include mixins.pxRem(line-height, 12);
    @include mixins.pxRem(left, 11);
    @include mixins.pxRem(padding, 4 4);
    @include mixins.pxRem(border-radius, 4);
    @include mixins.pxRem(top, -10);
    color: map.get(vars.$color, state-grey-b);
    position: absolute;
    background-color: map.get(vars.$color, white);
    display: inline-block;
    opacity: 0;
  }

  .msg-error {
    @include mixins.pxRem(padding, 3 16);
    @include mixins.pxRem(font-size, 10);
    @include mixins.pxRem(border-radius, 5);
    color: map.get(vars.$color, danger-msg);
    background-color: map.get(vars.$color, bg-danger);
    position: absolute;
    top: 110%;
    left: 0;
    width: max-content;
    max-width: 100%;
    z-index: 1;

    &::after {
      content: "";
      position: absolute;
      display: block;
      bottom: 100%;
      width: 0;
      height: 0;
      border-left: 8px solid transparent;
      border-right: 8px solid transparent;
      border-bottom: 6px solid rgba($color: map.get(vars.$color, danger), $alpha: 0.15);
    }
  }

  .form-control__control {
    @extend .form-control;
    padding: 0;
    display: flex;
    align-items: center;
    cursor: pointer;
    border: unset;
    background-color: unset;
    box-shadow: unset;
    max-height: unset;

    .form-control__multi-value {
      background-color: map.get(vars.$color, grey-a);
      cursor: pointer;
    }

    .form-control__value-container {
      max-height: 40px;
      z-index: 0;
      overflow-y: scroll;
      -ms-overflow-style: none;
      /* IE and Edge */
      scrollbar-width: none;
      /* Firefox */
    }
  }

  .form-control__menu {
    z-index: 100;
  }
}
